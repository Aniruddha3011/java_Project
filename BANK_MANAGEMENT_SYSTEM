1. Login Class
  Purpose: Authenticates users (either customers or bank staff/admin)
  Key Functionality:
    Prompts for username and password
    Validates credentials
    Handles unsuccessful login attempts with retries or failure message.
    User role validation (whether they are an admin or a customer)

2. SignupClass (Basic Information)
  Purpose: Allows users to sign up by providing basic personal information (e.g., name, email, etc.)
  Key Functionality:
    Collects and stores customer’s name, email, phone number, etc
    Validates the inputs
    Creates a user account with the information

3. SignupTwoClass (Additional Information)
  Purpose: Collects additional information (e.g., address, date of birth, etc.) after the basic details are collected.
    Key Functionality:
    Takes inputs like address, date of birth, etc
    Validates the data before proceeding

4. SignupThreeClass (Account Details)
  Purpose: Collects account-specific details such as account type (savings or checking), initial deposit amount, etc.
    Key Functionality:
    Collects the type of account (savings/checking)
    Validates the initial deposit
    Creates an account in the system

5. Withdraw Class
  Purpose: Handles withdrawals from the account.
  Key Functionality:
    Prompts the user for the amount they want to withdraw.
    Checks if the account has sufficient balance.
    Updates the account balance after withdrawal.

6. PinChange Class
  Purpose: Allows the user to change their PIN.
    Key Functionality:
    Collects the current PIN and validates it.
    Collects the new PIN and validates its format.
    Updates the PIN if validation is successful.

7. BalanceCheck Class
  Purpose: Allows the user to check their account balance.
  Key Functionality:
    Displays the current balance of the user’s account.

8. FastCash Class
  Purpose: Facilitates quick withdrawals for preset amounts (e.g., $20, $50, $100).
  Key Functionality:
    Offers a list of predefined fast cash options.
    Allows the user to quickly withdraw from their account.

Overall Project Structure and Flow
Login Flow: The user first logs in. If they don't have an account, they can sign up (via SignupClass, SignupTwoClass, SignupThreeClass).
Main Operations: Once logged in, the user can perform operations such as balance checks, withdrawals, and fast cash via BalanceCheck, Withdraw, and FastCash classes.
Additional Functionalities: Users can change their PIN through PinChange, or perform various other administrative tasks if applicable.


BankManagementSystem/
│
├── Account/               
│   ├── BankAccount.java
│
├── Authentication/         
│   ├── Login.java
│   ├── Signup.java
│   ├── SignupTwo.java
│   ├── SignupThree.java
│
├── Transactions/           
│   ├── Withdraw.java
│   ├── FastCash.java
│   ├── BalanceCheck.java
│
└── Security/               
    └── PinChange.java
